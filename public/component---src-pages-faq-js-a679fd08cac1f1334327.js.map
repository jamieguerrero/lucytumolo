{"version":3,"sources":["webpack:///./src/components/accordion-section.js","webpack:///./src/components/accordion.js","webpack:///./src/pages/faq.js"],"names":["AccordionSection","onClick","props","label","render","this","isOpen","className","style","cursor","children","Component","Accordion","allowMultipleOpen","openSections","state","setState","forEach","child","map","query","data","location","pathname","datoCmsFaqPage","title","fluid","titleImage","alt","faqPairs","item","index","question","key","dangerouslySetInnerHTML","__html","answerNode","childMarkdownRemark","html"],"mappings":"iJAoCeA,E,4JAzBbC,QAAU,WACR,EAAKC,MAAMD,QAAQ,EAAKC,MAAMC,Q,4GAGhCC,OAAA,WAAU,IAENH,EAEEI,KAFFJ,QAFK,EAIHI,KADFH,MAASI,EAHJ,EAGIA,OAAQH,EAHZ,EAGYA,MAGnB,OACE,yBAAKI,UAAU,sCACb,yBAAKN,QAASA,EAASO,MAAO,CAAEC,OAAQ,YACtC,uBAAGF,UAAaD,EAAU,uBAAyB,yBAA0BH,IAE9EG,GACC,yBAAKC,UAAU,iCACZF,KAAKH,MAAMQ,Y,GAzBOC,a,ICqEhBC,E,oBA7Db,WAAYV,GAAQ,IAAD,GACjB,cAAMA,IAAN,MAaFD,QAAU,SAAAE,GAAU,IAQK,EAOhB,EAfU,E,yHAAA,IAENU,EAFM,EAEfX,MAASW,kBACAC,EAHM,EAGfC,MAASD,aAGLR,IAAWQ,EAAaX,GAE1BU,EACF,EAAKG,SAAS,CACZF,aAAa,OAAD,UACPA,GADO,OAETX,IAASG,EAFA,MAMd,EAAKU,SAAS,CACZF,cAAY,OACTX,IAASG,EADA,MA5BhB,IAAMQ,EAAe,GAHJ,OAKjB,EAAKZ,MAAMQ,SAASO,SAAQ,SAAAC,GACtBA,EAAMhB,MAAMI,SACdQ,EAAaI,EAAMhB,MAAMC,QAAS,MAItC,EAAKY,MAAQ,CAAED,gBAXE,E,0GAsCnBV,OAAA,WAAU,IAENH,EAGEI,KAHFJ,QACSS,EAEPL,KAFFH,MAASQ,SACAI,EACPT,KADFU,MAASD,aAGX,OACE,yBAAKP,UAAU,aACZG,EAASS,KAAI,SAAAD,GAAK,OACjB,kBAAC,EAAD,CACEZ,SAAUQ,EAAaI,EAAMhB,MAAMC,OACnCA,MAAOe,EAAMhB,MAAMC,MACnBF,QAASA,GAERiB,EAAMhB,MAAMQ,e,GA3DDC,a,yBCET,mBAAAT,GACb,OACE,kBAAC,cAAD,CACEkB,MAAK,WAoBLhB,OAAQ,SAAAiB,GACN,OACE,kBAAC,IAAD,CAAQC,SAAUpB,EAAMoB,SAASC,UAC/B,yBAAKhB,UAAU,kBACb,yBAAKA,UAAU,sBACb,6BAASA,UAAU,qBACjB,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,sBAAsBc,EAAKG,eAAeC,OACzD,kBAAC,IAAD,CAAKlB,UAAU,iCAAiCmB,MAAOL,EAAKG,eAAeG,WAAWD,MAAOE,IAAKP,EAAKG,eAAeC,SAExH,yBAAKlB,UAAU,sCACb,kBAAC,EAAD,CAAWM,mBAAiB,GACzBQ,EAAKG,eAAeK,SAASV,KAAI,SAACW,EAAMC,GACvC,OACE,yBAAK5B,MAAO2B,EAAKE,SAAUC,IAAKF,GAC9B,yBACEG,wBAAyB,CACvBC,OAAQL,EAAKM,WAAWC,oBAAoBC,mBAtCxE,W","file":"component---src-pages-faq-js-a679fd08cac1f1334327.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass AccordionSection extends Component {\n  static propTypes = {\n    children: PropTypes.instanceOf(Object).isRequired,\n    isOpen: PropTypes.bool.isRequired,\n    label: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n  };\n\n  onClick = () => {\n    this.props.onClick(this.props.label);\n  };\n\n  render() {\n    const {\n      onClick,\n      props: { isOpen, label },\n    } = this;\n\n    return (\n      <div className=\"accordion-section padding-top-tiny\">\n        <div onClick={onClick} style={{ cursor: 'pointer' }}>\n          <p className={ (isOpen) ? \"accordion-label open\" : \"accordion-label close\"}>{label}</p>\n        </div>\n        {isOpen && (\n          <div className=\"text-regular padding-top-tiny\">\n            {this.props.children}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default AccordionSection;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport AccordionSection from './accordion-section';\n\nclass Accordion extends Component {\n  static propTypes = {\n    allowMultipleOpen: PropTypes.bool,\n    children: PropTypes.instanceOf(Object).isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const openSections = {};\n\n    this.props.children.forEach(child => {\n      if (child.props.isOpen) {\n        openSections[child.props.label] = true;\n      }\n    });\n\n    this.state = { openSections };\n  }\n\n  onClick = label => {\n    const {\n      props: { allowMultipleOpen },\n      state: { openSections },\n    } = this;\n\n    const isOpen = !!openSections[label];\n\n    if (allowMultipleOpen) {\n      this.setState({\n        openSections: {\n          ...openSections,\n          [label]: !isOpen\n        }\n      });\n    } else {\n      this.setState({\n        openSections: {\n          [label]: !isOpen\n        }\n      });\n    }\n  };\n\n  render() {\n    const {\n      onClick,\n      props: { children },\n      state: { openSections },\n    } = this;\n\n    return (\n      <div className=\"accordion\">\n        {children.map(child => (\n          <AccordionSection\n            isOpen={!!openSections[child.props.label]}\n            label={child.props.label}\n            onClick={onClick}\n          >\n            {child.props.children}\n          </AccordionSection>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Accordion;\n","import React from 'react'\nimport Layout from '../components/layout'\nimport Accordion from '../components/accordion';\n\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from \"gatsby-image\"\n\nexport default props => {\n  return (\n    <StaticQuery\n      query={graphql`\n        query faqQuery{\n          datoCmsFaqPage {\n            title\n            titleImage {\n              fluid(maxWidth: 600, imgixParams: { fm: \"jpg\", auto: \"compress\" }) {\n                ...GatsbyDatoCmsFluid\n              }\n            }\n            faqPairs {\n              question\n              answerNode {\n                childMarkdownRemark {\n                  html\n                }\n              }\n            }\n          }\n        }\n      `}\n      render={data => {\n        return (\n          <Layout location={props.location.pathname}>\n            <div className=\"grid-container\">\n              <div className=\"grid-inner-wrapper\">\n                <section className=\"padding-top-small\">\n                  <div className=\"text-on-image col-4-left\">\n                    <div className=\"text-on-image-text\">{data.datoCmsFaqPage.title}</div>\n                    <Img className=\"text-on-image-image full-image\" fluid={data.datoCmsFaqPage.titleImage.fluid} alt={data.datoCmsFaqPage.title}/>\n                  </div>\n                  <div className=\"half-right mobile-padding-top-tiny\">\n                    <Accordion allowMultipleOpen>\n                      {data.datoCmsFaqPage.faqPairs.map((item, index) => {\n                        return (\n                          <div label={item.question} key={index}>\n                            <div\n                              dangerouslySetInnerHTML={{\n                                __html: item.answerNode.childMarkdownRemark.html,\n                              }}\n                            />\n                          </div>\n                        )\n                      })}\n\n                    </Accordion>\n                  </div>\n                </section>\n              </div>\n            </div>\n          </Layout>\n        )\n      }}\n    />\n  )\n}\n"],"sourceRoot":""}